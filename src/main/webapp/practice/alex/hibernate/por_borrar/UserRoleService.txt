package com.psg.objectboard.model.service;
import com.psg.objectboard.model.EntityManagerHolder;
import com.psg.objectboard.model.repository.UserRoleRepositoryImpl;

import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;

public class UserRoleService {
    private UserRoleRepositoryImpl userRoleRepository;

    public UserRoleService() {
        this.userRoleRepository = new UserRoleRepositoryImpl();
    }

    public UserRoleService(UserRoleRepositoryImpl userRoleRepository) {
        this.userRoleRepository = userRoleRepository;
    }

    public UserRoleDto getUserRole(Long id){
        EntityManager entityManager=null;
        EntityTransaction transaction = null;
        UserRoleEntity userRoleEntity= null;
        UserRoleDto userRoleDto = null;
        try{
            entityManager = new EntityManagerHolder().getCurrentEntityManager();
            transaction=entityManager.getTransaction();
            transaction.begin();
            userRoleEntity = userRoleRepository.getById(id);
            userRoleDto = new UserRoleDto();
            userRoleDto.setMasterUserMuEmail(userRoleEntity.getMasterUserMuEmail());
            userRoleDto.setMasterUserBussinessUnitBuBisCode(userRoleEntity.getMasterUserBussinessUnitBuBisCode());
            userRoleDto.setProjectPrIdProject(userRoleEntity.getProjectPrIdProject());
            userRoleDto.setUmRole(userRoleEntity.getUmRole());
            userRoleDto.setUmStatus(userRoleEntity.getUmStatus());
            transaction.commit();
        }
        catch (Exception e){
            if (transaction!=null)
                transaction.rollback();
            e.printStackTrace();
            System.err.println("UserRole no funciona");
        }
        finally {
            if (entityManager!=null)
                entityManager.close();
        }
        return userRoleDto;
    }
}
